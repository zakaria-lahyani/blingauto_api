[importlinter]
root_package = app
include_external_packages = False

[importlinter:contract:operational-features-independence]
name = Operational features must not import each other
type = forbidden
source_modules =
    app.features.staff
    app.features.walkins
    app.features.inventory
    app.features.expenses
    app.features.analytics
forbidden_modules =
    app.features.staff
    app.features.walkins
    app.features.inventory
    app.features.expenses
    app.features.analytics
ignore_imports =
    # Allow auth enums per ADR-001
    app.features.*.api.* -> app.features.auth.domain.enums
    app.features.*.use_cases.* -> app.features.auth.domain.enums
    # Allow self-imports within same feature
    app.features.staff.* -> app.features.staff.*
    app.features.walkins.* -> app.features.walkins.*
    app.features.inventory.* -> app.features.inventory.*
    app.features.expenses.* -> app.features.expenses.*
    app.features.analytics.* -> app.features.analytics.*

[importlinter:contract:staff-layering]
name = Staff feature must follow layer dependencies
type = layers
layers =
    app.features.staff.api
    app.features.staff.use_cases
    app.features.staff.ports
    app.features.staff.domain

[importlinter:contract:walkins-layering]
name = Walk-in feature must follow layer dependencies
type = layers
layers =
    app.features.walkins.api
    app.features.walkins.use_cases
    app.features.walkins.ports
    app.features.walkins.domain

[importlinter:contract:inventory-layering]
name = Inventory feature must follow layer dependencies
type = layers
layers =
    app.features.inventory.api
    app.features.inventory.use_cases
    app.features.inventory.ports
    app.features.inventory.domain

[importlinter:contract:expenses-layering]
name = Expense feature must follow layer dependencies
type = layers
layers =
    app.features.expenses.api
    app.features.expenses.use_cases
    app.features.expenses.ports
    app.features.expenses.domain

[importlinter:contract:analytics-layering]
name = Analytics feature must follow layer dependencies
type = layers
layers =
    app.features.analytics.api
    app.features.analytics.use_cases
    app.features.analytics.ports
    app.features.analytics.domain

[importlinter:contract:domain-purity-staff]
name = Staff domain must not import FastAPI/Pydantic
type = forbidden
source_modules =
    app.features.staff.domain
forbidden_modules =
    fastapi
    pydantic

[importlinter:contract:domain-purity-walkins]
name = Walk-in domain must not import FastAPI/Pydantic
type = forbidden
source_modules =
    app.features.walkins.domain
forbidden_modules =
    fastapi
    pydantic

[importlinter:contract:domain-purity-inventory]
name = Inventory domain must not import FastAPI/Pydantic
type = forbidden
source_modules =
    app.features.inventory.domain
forbidden_modules =
    fastapi
    pydantic

[importlinter:contract:domain-purity-expenses]
name = Expense domain must not import FastAPI/Pydantic
type = forbidden
source_modules =
    app.features.expenses.domain
forbidden_modules =
    fastapi
    pydantic

[importlinter:contract:domain-purity-analytics]
name = Analytics domain must not import FastAPI/Pydantic
type = forbidden
source_modules =
    app.features.analytics.domain
forbidden_modules =
    fastapi
    pydantic

[importlinter:contract:adapters-to-ports]
name = Adapters must depend on ports not other features
type = forbidden
source_modules =
    app.features.staff.adapters
    app.features.walkins.adapters
    app.features.inventory.adapters
    app.features.expenses.adapters
    app.features.analytics.adapters
forbidden_modules =
    # Forbid direct imports from other features
    app.features.bookings.infrastructure
    app.features.bookings.adapters
    app.features.auth.infrastructure
    app.features.auth.adapters
    app.features.services.infrastructure
    app.features.services.adapters
    app.features.vehicles.infrastructure
    app.features.vehicles.adapters
ignore_imports =
    # Analytics currently violates - to be fixed
    app.features.analytics.adapters.repositories -> app.features.*.infrastructure.models
    app.features.analytics.adapters.repositories -> app.features.*.adapters.models
