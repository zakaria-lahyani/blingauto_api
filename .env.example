# =============================================================================
# CAR WASH API - ENVIRONMENT CONFIGURATION TEMPLATE
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to version control!
# =============================================================================

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
DATABASE_URL=postgresql+asyncpg://username:password@localhost:5432/carwash_db

# =============================================================================
# REDIS CONFIGURATION (Required for production)
# =============================================================================
REDIS_URL=redis://localhost:6379/0
# For Redis with auth: redis://:password@localhost:6379/0
# For Redis SSL: rediss://username:password@host:6380/0

# =============================================================================
# GLOBAL APPLICATION SETTINGS
# =============================================================================
GLOBAL_ENVIRONMENT=development
GLOBAL_DEBUG=true

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
CORS_ALLOW_ALL_ORIGINS=true
CORS_ALLOW_CREDENTIALS=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
SECURITY_ENABLE_HSTS=false
SECURITY_ENABLE_CSP=true
SECURITY_CSP_POLICY=default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOGGING_ENABLE_REQUEST_LOGGING=true
LOGGING_LOG_SLOW_REQUESTS=true
LOGGING_SLOW_REQUEST_THRESHOLD=1.0
LOGGING_LOG_LEVEL=INFO

# =============================================================================
# COMPRESSION CONFIGURATION
# =============================================================================
COMPRESSION_ENABLE_GZIP=true
COMPRESSION_GZIP_MINIMUM_SIZE=1000

# =============================================================================
# AUTHENTICATION CONFIGURATION
# =============================================================================

# JWT Settings (CRITICAL: Generate strong secrets for production!)
# Generate with: openssl rand -base64 32
AUTH_JWT_SECRET_KEY=GENERATE_A_STRONG_SECRET_KEY_HERE_32_CHARS_MINIMUM
AUTH_ACCESS_TOKEN_EXPIRE_MINUTES=30
AUTH_REFRESH_TOKEN_EXPIRE_DAYS=7

# Admin Setup (CRITICAL: Use strong passwords for production!)
AUTH_INITIAL_ADMIN_EMAIL=admin@yourcompany.com
AUTH_INITIAL_ADMIN_PASSWORD=GENERATE_A_STRONG_PASSWORD_HERE

# Rate Limiting
AUTH_ENABLE_RATE_LIMITING=true
AUTH_CLIENT_RATE_LIMIT=30
AUTH_ADMIN_RATE_LIMIT=200
AUTH_MANAGER_RATE_LIMIT=100
AUTH_WASHER_RATE_LIMIT=60

# Security Logging
AUTH_ENABLE_SECURITY_LOGGING=true
AUTH_LOG_FAILED_ATTEMPTS=true
AUTH_LOG_SUCCESSFUL_AUTH=true

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# Email Provider (mock, smtp)
AUTH_EMAIL_PROVIDER=mock

# SMTP Settings (required if using SMTP provider)
AUTH_SMTP_HOST=smtp.gmail.com
AUTH_SMTP_PORT=587
AUTH_SMTP_USERNAME=your-email@gmail.com
AUTH_SMTP_PASSWORD=your-app-password
AUTH_SMTP_USE_TLS=true

# Email Addresses
AUTH_FROM_EMAIL=noreply@yourcompany.com
AUTH_SUPPORT_EMAIL=support@yourcompany.com

# Application Details
AUTH_APP_NAME=Car Wash Service
AUTH_APP_URL=https://yourcompany.com

# =============================================================================
# SECRETS MANAGEMENT (Production)
# =============================================================================

# AWS Secrets Manager (optional - for production)
# AUTH_USE_SECRETS_MANAGER=true
# AUTH_AWS_SECRETS_NAME=carwash-api-secrets
# AUTH_AWS_REGION=us-east-1

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
DB_ECHO=false

# =============================================================================
# PRODUCTION CHECKLIST
# =============================================================================
# Before deploying to production, ensure:
# 
# 1. Generate strong secrets:
#    - JWT secret: openssl rand -base64 32
#    - Admin password: Use a password manager
# 
# 2. Configure production database:
#    - Use SSL connection string
#    - Set up proper user permissions
# 
# 3. Set up Redis:
#    - Use managed Redis service (AWS ElastiCache, etc.)
#    - Enable password authentication
# 
# 4. Configure email provider:
#    - Set AUTH_EMAIL_PROVIDER=smtp
#    - Configure SMTP settings or use service like SendGrid
# 
# 5. Update security settings:
#    - Set GLOBAL_ENVIRONMENT=production
#    - Set GLOBAL_DEBUG=false
#    - Set SECURITY_ENABLE_HSTS=true
# 
# 6. Consider using AWS Secrets Manager:
#    - Set AUTH_USE_SECRETS_MANAGER=true
#    - Store secrets in AWS Secrets Manager
#    - Remove secrets from environment variables
# =============================================================================