[importlinter]
root_package = app
include_external_packages = False

[importlinter:contract:1]
name = Domain layer independence - no framework dependencies
type = forbidden
source_modules =
    app.features.*.domain
forbidden_modules =
    fastapi
    pydantic
    sqlalchemy
    redis
ignore_imports =
    * -> typing
    * -> datetime
    * -> enum
    * -> dataclasses
    * -> uuid
    * -> decimal
    * -> abc

[importlinter:contract:2]
name = No cross-feature imports (features cannot import other features directly)
type = forbidden
source_modules =
    app.features.auth
forbidden_modules =
    app.features.bookings
    app.features.services
    app.features.vehicles
    app.features.pricing
    app.features.scheduling

[importlinter:contract:3]
name = No cross-feature imports from bookings
type = forbidden
source_modules =
    app.features.bookings
forbidden_modules =
    app.features.auth
ignore_imports =
    # Adapters can call public use cases from other features
    app.features.bookings.adapters.external_services -> app.features.services.use_cases.*
    app.features.bookings.adapters.external_services -> app.features.vehicles.use_cases.*

[importlinter:contract:4]
name = No cross-feature imports from services
type = forbidden
source_modules =
    app.features.services
forbidden_modules =
    app.features.auth
    app.features.bookings
    app.features.vehicles
    app.features.pricing
    app.features.scheduling

[importlinter:contract:5]
name = No cross-feature imports from vehicles
type = forbidden
source_modules =
    app.features.vehicles
forbidden_modules =
    app.features.auth
    app.features.bookings
    app.features.services
    app.features.pricing
    app.features.scheduling

[importlinter:contract:6]
name = No cross-feature imports from pricing
type = forbidden
source_modules =
    app.features.pricing
forbidden_modules =
    app.features.auth
    app.features.bookings
    app.features.vehicles
    app.features.services
    app.features.scheduling

[importlinter:contract:7]
name = No cross-feature imports from scheduling
type = forbidden
source_modules =
    app.features.scheduling
forbidden_modules =
    app.features.auth
    app.features.bookings
    app.features.vehicles
    app.features.services
    app.features.pricing

[importlinter:contract:8]
name = Core cannot import features
type = forbidden
source_modules =
    app.core
forbidden_modules =
    app.features.auth
    app.features.bookings
    app.features.services
    app.features.vehicles
    app.features.pricing
    app.features.scheduling

[importlinter:contract:9]
name = API layer dependency direction (api -> use_cases -> domain)
type = layers
layers =
    app.features.*.api
    app.features.*.use_cases
    app.features.*.domain
containers =
    app.features

[importlinter:contract:10]
name = Use cases depend on domain and ports only
type = forbidden
source_modules =
    app.features.*.use_cases
forbidden_modules =
    app.features.*.adapters
    app.features.*.api
    fastapi
    pydantic

[importlinter:contract:11]
name = Adapters implement ports (adapters -> ports)
type = forbidden
source_modules =
    app.features.*.adapters
forbidden_modules =
    app.features.*.use_cases
ignore_imports =
    # Adapters can call public use cases from OTHER features
    app.features.*.adapters.external_* -> app.features.*.use_cases.*
    # But not their own feature's use cases (except in factories)
    app.features.bookings.adapters.external_services -> app.features.services.use_cases.*
    app.features.bookings.adapters.external_services -> app.features.vehicles.use_cases.*

[importlinter:contract:12]
name = Shared layer can be used by features but not vice versa
type = independence
modules =
    app.features.auth
    app.features.bookings
    app.features.services
    app.features.vehicles
    app.features.pricing
    app.features.scheduling
ignore_imports =
    * -> app.shared.*
