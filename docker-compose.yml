version: '3.8'

# =============================================================================
# BlingAuto API - Docker Compose Configuration
# Production-ready setup with PostgreSQL, Redis, and API service
# =============================================================================

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: blingauto-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-blingauto}
      POSTGRES_USER: ${POSTGRES_USER:-blingauto_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_this_password}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.utf8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - blingauto-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-blingauto_user} -d ${POSTGRES_DB:-blingauto}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: blingauto-redis
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-change_this_redis_password}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 60 1
      --loglevel warning
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - blingauto-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # BlingAuto API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blingauto-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Application
      ENVIRONMENT: ${ENVIRONMENT:-production}
      APP_NAME: ${APP_NAME:-BlingAuto API}
      APP_VERSION: ${APP_VERSION:-1.0.0}
      DEBUG: ${DEBUG:-false}

      # Server
      HOST: 0.0.0.0
      PORT: 8000
      WORKERS: ${WORKERS:-4}

      # Database
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-blingauto_user}:${POSTGRES_PASSWORD:-change_this_password}@postgres:5432/${POSTGRES_DB:-blingauto}
      DATABASE_POOL_SIZE: ${DATABASE_POOL_SIZE:-10}
      DATABASE_MAX_OVERFLOW: ${DATABASE_MAX_OVERFLOW:-20}
      DATABASE_POOL_TIMEOUT: ${DATABASE_POOL_TIMEOUT:-30}
      DATABASE_ECHO: ${DATABASE_ECHO:-false}

      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD:-change_this_redis_password}@redis:6379/0
      REDIS_MAX_CONNECTIONS: ${REDIS_MAX_CONNECTIONS:-20}
      REDIS_TTL: ${REDIS_TTL:-300}

      # Security
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here-change-in-production}
      ALGORITHM: ${ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-15}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS:-7}
      PASSWORD_RESET_TOKEN_EXPIRE_HOURS: ${PASSWORD_RESET_TOKEN_EXPIRE_HOURS:-1}
      EMAIL_VERIFICATION_TOKEN_EXPIRE_HOURS: ${EMAIL_VERIFICATION_TOKEN_EXPIRE_HOURS:-24}

      # Email (optional)
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL:-noreply@blingauto.com}
      SMTP_FROM_NAME: ${SMTP_FROM_NAME:-BlingAuto}
      SMTP_USE_TLS: ${SMTP_USE_TLS:-true}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}

      # Rate Limiting
      RATE_LIMIT_ENABLED: ${RATE_LIMIT_ENABLED:-true}
      RATE_LIMIT_REQUESTS_PER_MINUTE: ${RATE_LIMIT_REQUESTS_PER_MINUTE:-60}
      RATE_LIMIT_REQUESTS_PER_HOUR: ${RATE_LIMIT_REQUESTS_PER_HOUR:-1000}

      # CORS
      # CORS_ORIGINS: ${CORS_ORIGINS}  # Removed - using default from settings.py
      CORS_ALLOW_CREDENTIALS: ${CORS_ALLOW_CREDENTIALS:-true}

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-INFO}

      # Account Security
      MAX_LOGIN_ATTEMPTS: ${MAX_LOGIN_ATTEMPTS:-5}
      LOCKOUT_DURATION_MINUTES: ${LOCKOUT_DURATION_MINUTES:-30}
      PASSWORD_MIN_LENGTH: ${PASSWORD_MIN_LENGTH:-8}
      PASSWORD_MAX_LENGTH: ${PASSWORD_MAX_LENGTH:-128}

      # Initial Admin User (optional)
      INITIAL_ADMIN_EMAIL: ${INITIAL_ADMIN_EMAIL:-}
      INITIAL_ADMIN_PASSWORD: ${INITIAL_ADMIN_PASSWORD:-}
      INITIAL_ADMIN_FIRST_NAME: ${INITIAL_ADMIN_FIRST_NAME:-Admin}
      INITIAL_ADMIN_LAST_NAME: ${INITIAL_ADMIN_LAST_NAME:-User}
    ports:
      - "${API_PORT:-8000}:8000"
    networks:
      - blingauto-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database Migration Runner (runs once and exits)
  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blingauto-migrations
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-blingauto_user}:${POSTGRES_PASSWORD:-change_this_password}@postgres:5432/${POSTGRES_DB:-blingauto}
    entrypoint: ["/app/scripts/docker-entrypoint-migrations.sh"]
    networks:
      - blingauto-network
    restart: "no"

# Networks
networks:
  blingauto-network:
    driver: bridge
    name: blingauto-network

# Volumes
volumes:
  postgres_data:
    name: blingauto-postgres-data
    driver: local
  redis_data:
    name: blingauto-redis-data
    driver: local
